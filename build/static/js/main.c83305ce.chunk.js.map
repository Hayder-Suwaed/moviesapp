{"version":3,"sources":["components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBth.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/hooks/useHomeFetch.js","components/Home.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actor.js","components/hooks/useMovieFetch.js","components/Movie.js","NotFound.js","components/styles/GlobalStyle.js","components/App.js","index.js","components/images/no_image.jpg"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","IMAGE_BASE_URL","StyledHeroImage","props","image","HeroImage","title","text","StyledSearchBar","StyledSearchBarContent","SearchBar","callback","useState","state","setState","timeOut","useRef","name","size","type","placeholder","onChange","event","value","target","clearTimeout","current","setTimeout","StyledGrid","StyledGridContent","Grid","header","children","StyledLoadMoreBtn","button","LoadMoreBtn","onClick","StyledSpinner","Spinner","StyledMovieThump","MovieThump","movieId","clickable","Home","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","useEffect","sessionStorage","homeState","JSON","parse","searchTerm","setItem","stringify","useHomeFetch","setSearchTerm","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","movieName","searchEndPoint","popularEndPoint","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","MovieThumb","vote_average","directors","length","element","credit_id","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actor","actor","profile_path","character","Movie","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","localStorage","useMovieFetch","runtime","NotFound","GlobalStyle","createGlobalStyle","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c83305ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nimport RMDBLogo from \"../images/reactMovie_logo.png\";\nimport TMDBLogo from \"../images/tmdb_logo.svg\";\n\nimport {\n  StyledHeader,\n  StyledRMDBLogo,\n  StyledTMDBLogo\n} from \"../styles/StyledHeader\";\n\nconst Header = () => (\n  <StyledHeader>\n    <div className=\"header-content\">\n      <Link to=\"/\">\n        <StyledRMDBLogo src={RMDBLogo} alt=\"rmdb-logo\" />\n      </Link>\n      <StyledTMDBLogo src={TMDBLogo} alt=\"tmdb-logo\" />\n    </div>\n  </StyledHeader>\n);\n\nexport default Header;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"5cd822405a1431fe56dda7ff75ebd67e\";\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"w1280\";\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w500\";\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n};\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { StyledHeroImage } from \"../styles/StyledHeroImage\";\n\nconst HeroImage = ({ image, title, text }) => (\n  <StyledHeroImage image={image}>\n    <div className=\"heroimage-content\">\n      <div className=\"heroimage-text\">\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </div>\n    </div>\n  </StyledHeroImage>\n);\n\nHeroImage.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string\n};\n\nexport default HeroImage;\n","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;","import React, { useState, useRef } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  StyledSearchBar,\n  StyledSearchBarContent\n} from \"../styles/StyledSearchBar\";\n\nconst SearchBar = ({ callback }) => {\n  const [state, setState] = useState(\"\");\n  const timeOut = useRef(null);\n\n  const doSearch = (event) => {\n    const { value } = event.target;\n\n    clearTimeout(timeOut.current);\n    setState(value);\n\n    timeOut.current = setTimeout(() => {\n      callback(value);\n    }, 500);\n  };\n\n  return (\n    <StyledSearchBar>\n      <StyledSearchBarContent>\n        <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search Movie\"\n          onChange={doSearch}\n          value={state}\n        />\n      </StyledSearchBarContent>\n    </StyledSearchBar>\n  );\n};\n\nSearchBar.propTypes = {\n  callback: PropTypes.func\n};\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid';\n\nconst Grid = ({ header, children }) => (\n  <StyledGrid>\n    <h1>{header}</h1>\n    <StyledGridContent>{children}</StyledGridContent>\n  </StyledGrid>\n)\n\nGrid.propTypes = {\n  header: PropTypes.string,\n}\n\nexport default Grid;","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n  :hover {\n    opacity: 0.8;\n  }\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { StyledLoadMoreBtn } from \"../styles/StyledLoadMoreBtn\";\n\nconst LoadMoreBtn = ({ text, callback }) => (\n  <StyledLoadMoreBtn type=\"button\" onClick={callback}>\n    {text}\n  </StyledLoadMoreBtn>\n);\n\nLoadMoreBtn.propTypes = {\n  text: PropTypes.string,\n  callback: PropTypes.func\n};\n\nexport default LoadMoreBtn;\n","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport { StyledSpinner } from '../styles/StyledSpinner';\n\nconst Spinner = () =><StyledSpinner />\n\nexport default Spinner;","import styled from 'styled-components';\n\nexport const StyledMovieThump = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n\n    .clickable {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\n\nimport { StyledMovieThump  } from '../styles/StyledMovieThumb';\n\nconst MovieThump  = ({ image, movieId, clickable }) => (\n  <StyledMovieThump >\n    {clickable ? (\n      <Link to={`/${movieId}`}>\n        <img className=\"clickable\" src={image} alt=\"moviethump\" />\n      </Link>\n    ) : (\n      <img src={image} alt=\"moviethump\" />\n    )}\n  </StyledMovieThump >\n)\n\nMovieThump.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool,\n}\n\nexport default MovieThump;","import { useState, useEffect } from \"react\";\nimport { POPULAR_BASE_URL } from \"../../config\";\n\nexport const useHomeFetch = () => {\n  const [state, setState] = useState({ movies: [] });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async (endpoint) => {\n    setError(false);\n    setLoading(true);\n\n    const isLoadMore = endpoint.search(\"page\");\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState((prev) => ({\n        ...prev,\n        movies:\n          isLoadMore !== -1\n            ? [...prev.movies, ...result.results]\n            : [...result.results],\n        heroImage: prev.heroImage || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages,\n      }));\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  // Fetch popular movies initially on mount\n  useEffect(() => {\n    if (sessionStorage.homeState) {\n      setState(JSON.parse(sessionStorage.homeState));\n      setLoading(false);\n    } else {\n      fetchMovies(POPULAR_BASE_URL);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!state.searchTerm) {\n      sessionStorage.setItem(\"homeState\", JSON.stringify(state));\n    }\n  }, [state]);\n\n  return [{ state, loading, error }, fetchMovies];\n};\n","import React, { useState } from \"react\";\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n} from \"../config\";\nimport HeroImage from \"./elements/HeroImage\";\nimport SearchBar from \"./elements/SearchBar\";\nimport Grid from \"./elements/Grid\";\nimport LoadMoreBtn from \"./elements/LoadMoreBth.js\";\nimport Spinner from \"./elements/Spinner\";\nimport MovieThump from \"./elements/MovieThumb\";\nimport { POPULAR_BASE_URL, SEARCH_BASE_URL } from \"../config\";\n\n//custom hook\nimport { useHomeFetch } from \"./hooks/useHomeFetch\";\nimport NoImage from \"./images/no_image.jpg\";\n\nconst Home = () => {\n  const [\n    {\n      state: { movies, currentPage, totalPages, heroImage },\n      loading,\n      error\n    },\n    fetchMovies\n  ] = useHomeFetch();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const searchMovies = (search) => {\n    const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\n\n    setSearchTerm(search);\n    fetchMovies(endpoint);\n  };\n\n  const loadMoreMovies = () => {\n    //end point to load more movies\n    const searchEndPoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}&page=${currentPage +\n      1}`;\n    const popularEndPoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=${currentPage +\n      1}`;\n\n    const endpoint = searchTerm ? searchEndPoint : popularEndPoint;\n\n    fetchMovies(endpoint);\n  };\n  if (error) return <div>Something went wrong ....</div>;\n  if (!movies[0]) return <Spinner />;\n  return (\n    <>\n      {!searchTerm && (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n          title={heroImage.original_title}\n          text={heroImage.overview}\n        />\n      )}\n      <Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\n        {movies.map((movie) => (\n          <MovieThump\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                : NoImage\n            }\n            movieId={movie.id}\n            movieName={movie.original_title}\n          />\n        ))}\n      </Grid>\n      <SearchBar callback={searchMovies} />\n      {loading && <Spinner />}\n      {currentPage < totalPages && !loading && (\n        <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;","import React from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\n\nimport { StyledNavigation } from '../styles/StyledNavigation';\n\nconst Navigation = ({ movie }) => (\n  <StyledNavigation>\n    <div className=\"navigation-content\">\n      <Link to=\"/\">\n        <p>Home</p>\n      </Link>\n      <p>|</p>\n      <p>{movie}</p>\n    </div>\n  </StyledNavigation>\n);\n\nNavigation.propTypes = {\n  movie: PropTypes.string,\n}\n\nexport default Navigation;","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n  .director {\n    margin: 0 0 0 40px;\n    p {\n      margin: 0;\n    }\n  }\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport NoImage from \"../images/no_image.jpg\";\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\nimport MovieThumb from \"./MovieThumb\";\nimport { StyledMovieInfo } from \"../styles/StyledMovieInfo\";\n\nconst MovieInfo = ({ movie }) => (\n  <StyledMovieInfo backdrop={movie.backdrop_path}>\n    <div className=\"movieinfo-content\">\n      <div className=\"movieinfo-thumb\">\n        <MovieThumb\n          image={\n            movie.poster_path\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n              : NoImage\n          }\n          clickable={false}\n          alt=\"moviethumb\"\n        />\n      </div>\n      <div className=\"movieinfo-text\">\n        <h1>{movie.title}</h1>\n        <h3>PLOT</h3>\n        <p>{movie.overview}</p>\n\n        <div className=\"rating-director\">\n          <div>\n            <h3>IMDB RATING</h3>\n            <div className=\"score\">{movie.vote_average}</div>\n          </div>\n          <div className=\"director\">\n            <h3>DIRECTOR{movie.directors.length > 1 ? \"S\" : \"\"}</h3>\n            {movie.directors.map((element) => (\n              <p key={element.credit_id}>{element.name}</p>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  </StyledMovieInfo>\n);\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n  directors: PropTypes.array\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;","import React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport PropTypes from \"prop-types\";\nimport { calcTime, convertMoney } from \"../../helpers\";\n\nimport { StyledMovieInfoBar } from \"../styles/StyledMovieInfoBar\";\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n  <StyledMovieInfoBar>\n    <div className=\"movieinfobar-content\">\n      <div className=\"movieinfobar-content-col\">\n        <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n        <span className=\"movieinfobar-info\">\n          Running time: {calcTime(time)}\n        </span>\n      </div>\n\n      <div className=\"movieinfobar-content-col\">\n        <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\n        <span className=\"movieinfobar-info\">\n          Budget: {convertMoney(budget)}\n        </span>\n      </div>\n\n      <div className=\"movieinfobar-content-col\">\n        <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\n        <span className=\"movieinfobar-info\">\n          Revenue: {convertMoney(revenue)}\n        </span>\n      </div>\n    </div>\n  </StyledMovieInfoBar>\n);\n\nMovieInfoBar.propTypes = {\n  time: PropTypes.number,\n  budget: PropTypes.number,\n  revenue: PropTypes.number\n};\n\nexport default MovieInfoBar;\n","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport NoImage from \"../images/no_image.jpg\";\n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\nimport { StyledActor } from \"../styles/StyledActor\";\n\nconst Actor = ({ actor }) => (\n  <StyledActor>\n    <img\n      src={\n        actor.profile_path\n          ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n          : NoImage\n      }\n      alt=\"actorthumb\"\n    />\n    <span className=\"actor-name\">{actor.name}</span>\n    <span className=\"actor-character\">{actor.character}</span>\n  </StyledActor>\n);\n\nActor.propTypes = {\n  actor: PropTypes.object\n};\n\nexport default Actor;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\n\nexport const useMovieFetch = (movieId) => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const fetchData = useCallback(async () => {\n    setError(false);\n    setLoading(true);\n\n    try {\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n      const result = await (await fetch(endpoint)).json();\n\n      const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n      const creditsResult = await (await fetch(creditsEndpoint)).json();\n      const directors = creditsResult.crew.filter(\n        (member) => member.job === \"Director\"\n      );\n\n      setState({\n        ...result,\n        actors: creditsResult.cast,\n        directors\n      });\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  }, [movieId]);\n\n  useEffect(() => {\n    if (localStorage[movieId]) {\n      setState(JSON.parse(localStorage[movieId]));\n      setLoading(false);\n    } else {\n      fetchData();\n    }\n  }, [fetchData, movieId]);\n\n  useEffect(() => {\n    localStorage.setItem(movieId, JSON.stringify(state));\n  }, [movieId, state]);\n\n  return [state, loading, error];\n};\n","import React from \"react\";\n\n// Components\nimport Navigation from \"./elements/Navigation\";\nimport MovieInfo from \"./elements/MovieInfo\";\nimport MovieInfoBar from \"./elements/MovieInfoBar\";\nimport Actor from \"./elements/Actor\";\nimport Grid from \"./elements/Grid\";\nimport Spinner from \"./elements/Spinner\";\n\nimport { useMovieFetch } from \"./hooks/useMovieFetch\";\n\nconst Movie = ({ movieId }) => {\n  const [movie, loading, error] = useMovieFetch(movieId);\n\n  if (error) return <div>Something went wrong ...</div>;\n  if (loading) return <Spinner />;\n\n  return (\n    <>\n      <Navigation movie={movie.original_title} />\n      <MovieInfo movie={movie} />\n      <MovieInfoBar\n        time={movie.runtime}\n        budget={movie.budget}\n        revenue={movie.revenue}\n      />\n      <Grid header=\"Actors\">\n        {movie.actors.map((actor) => (\n          <Actor key={actor.credit_id} actor={actor} />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Movie;\n","\nimport React from 'react';\n\nconst NotFound = () => <div>Whoooops ... nothing found here...</div>\n\nexport default NotFound;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\n\nimport Header from \"./elements/Header\";\nimport Home from \"./Home\";\nimport Movie from \"./Movie\";\nimport NotFound from \"../NotFound\";\n\nimport { GlobalStyle } from \"./styles/GlobalStyle\";\n\nconst App = () => (\n  <>\n    <Header />\n    <Router>\n      <Home path=\"/\" />\n      <Movie path=\"/:movieId\" />\n      <NotFound default />\n    </Router>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}